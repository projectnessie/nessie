/*
 * Copyright (C) 2022 Dremio
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'java-library'
}

group 'org.projectnessie.nessie.build-tool-integration-tests'
version '0.0.2-SNAPSHOT'

def nessieVersion = file("../version.txt").text.trim()
def versionMavenResolver = "1.9.22"

dependencies {
  implementation(enforcedPlatform("org.projectnessie.nessie:nessie-bom:$nessieVersion"))
  implementation("org.projectnessie.nessie:nessie-jaxrs-testextension")
  implementation("org.projectnessie.nessie:nessie-versioned-storage-cache")
  implementation("org.projectnessie.nessie:nessie-versioned-storage-common-serialize")
  implementation("org.projectnessie.nessie:nessie-versioned-storage-inmemory-tests")
  implementation("org.projectnessie.nessie:nessie-versioned-storage-mongodb2")
  implementation("org.projectnessie.nessie:nessie-versioned-storage-rocksdb-tests")
  implementation("org.projectnessie.nessie:nessie-versioned-storage-store")
  implementation("org.projectnessie.nessie:nessie-versioned-storage-testextension")

  testImplementation(platform("org.junit:junit-bom:5.12.2"))
  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testImplementation("org.junit.jupiter:junit-jupiter-params")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
  testImplementation("org.assertj:assertj-core:3.27.3")

  testImplementation("org.apache.maven.resolver:maven-resolver-supplier:$versionMavenResolver")
}

tasks.withType(Test).configureEach {
  systemProperty("nessie.version", nessieVersion)
  useJUnitPlatform {}

  // Always run the tests
  outputs.upToDateWhen { false }
}
