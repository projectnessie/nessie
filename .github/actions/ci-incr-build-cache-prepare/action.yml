name: 'Incremental Gradle build cache prepare'
description: 'Prepare to save incremental Gradle build cache'
inputs:
  cache-read-only:
    description: 'Gradle cache read only'
    default: 'true'
  java-version:
    description: 'Java version'
    default: '21'
  job-id:
    description: 'Job name to prefer'
    default: 'nessie-ci'
  job-instance:
    description: 'Job instance to prefer'
    default: 'ci'
runs:
  using: "composite"
  steps:
    - name: Prep env
      shell: bash
      run: |
        echo "GRADLE_BUILD_ACTION_CACHE_KEY_ENVIRONMENT=java-${{ inputs.java-version }}" >> ${GITHUB_ENV}
        echo "GRADLE_BUILD_ACTION_CACHE_KEY_JOB=${{ inputs.job-id }}" >> ${GITHUB_ENV}
        if [[ -n "${{ inputs.no-daemon }}" ]] ; then
          echo "G_DAEMON_FLAG=--no-daemon" >> ${GITHUB_ENV}
        fi
        if [[ -n "${{ inputs.job-instance }}" ]] ; then
          echo "GRADLE_BUILD_ACTION_CACHE_KEY_JOB_INSTANCE=${{ inputs.job-instance }}" >> ${GITHUB_ENV}
        fi

    - name: Gradle / Setup
      uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4
      with:
        cache-read-only: ${{ inputs.cache-read-only }}
        validate-wrappers: false

    - name: Gradle / Init
      shell: bash
      run: ./gradlew -h

    - name: Download existing workflow artifacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
      # Just in case, don't know the exact inner workings of Gradle's build cache and whether
      # the download-action complains about duplicate files.
      continue-on-error: true
      with:
        path: ~/downloaded-artifacts/

    - name: Extract caches
      shell: bash
      run: |
        echo "::group::Gradle build cache / add incremental updates"
        mkdir -p ~/.gradle/caches/

        if [[ -d ~/downloaded-artifacts/ ]] ; then
          find ~/downloaded-artifacts/ -type f -name "ci-gradle-caches-*-${{ inputs.java-version }}.tar" | while read arch ; do
            echo "Adding archive content from $arch ..."
            (cd ~/.gradle/caches/ ; tar xf $arch)
          done
        else
          echo "No previous build cache artifacts downloaded."
        fi
        
        date +%s > ~/caches-prepared-at-epoch

        echo "::endgroup::"
