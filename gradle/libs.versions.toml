# Nessie dependencies, without the dependencies needed by build-logic/

[versions]
bouncycastle = "1.70"
checkstyle = "10.26.1"
errorprone = "2.41.0"
errorproneSlf4j = "0.1.29"
gatling = "3.14.3"
googleCloudBigdataoss = "3.1.3"
googleJavaFormat = "1.28.0"
hadoop = "3.4.1"
iceberg = "1.9.2" # While bumping this version, 'nessieClientVersion' must also be updated.
immutables = "2.11.2"
jandex = "3.1.8"
jmh = "1.37"
junit = "5.13.4"
kafka = "4.0.0"
keycloak = "26.0.6"
logback = "1.5.18"
mavenResolver = "1.9.24"
mockito="5.18.0"
nessieClientVersion = "0.99.0" # Must be in sync with Nessie version in the Iceberg release.
netty = "4.2.3.Final"
opentelemetry = "1.53.0"
opentelemetryAlpha = "1.31.0-alpha"
picocli = "4.7.6"
protobuf = "4.31.1"
quarkusPlatform = "3.25.0"
quarkusPlugin = "3.25.0"
quarkusVault = "4.4.0"
slf4j = "2.0.17"
undertow = "2.3.18.Final"

# Backwards compatibility versions. Not referenced in this file to not let Renovate bump those versions.
logback_compat = "1.3.14" # For Java 8
slf4j_compat = "1.7.36" # Spark up to 3.3 has a hard reference to org.slf4j.impl.StaticLoggerBinder

[bundles]
junit-testing = ["assertj-core", "mockito-core", "mockito-junit-jupiter", "junit-jupiter-api", "junit-jupiter-params", "junit-platform-reporting"]

[libraries]
agroal-pool = { module = "io.agroal:agroal-pool", version = "2.7.1" }
agrona = { module = "org.agrona:agrona", version = "1.22.0" }
assertj-core = { module = "org.assertj:assertj-core", version = "3.27.4" }
avro = { module = "org.apache.avro:avro", version = "1.12.0" }
awaitility = { module = "org.awaitility:awaitility", version = "4.3.0" }
awssdk-bom = { module = "software.amazon.awssdk:bom", version = "2.32.9" }
azuresdk-bom = { module = "com.azure:azure-sdk-bom", version = "1.2.37" }
bouncycastle-bcpkix = { module = "org.bouncycastle:bcpkix-jdk15on", version.ref = "bouncycastle" }
bouncycastle-bcprov = { module = "org.bouncycastle:bcprov-jdk15on", version.ref = "bouncycastle" }
cassandra-driver-bom = { module = "org.apache.cassandra:java-driver-bom", version = "4.19.0" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version = "3.2.2" }
cel-bom = { module = "org.projectnessie.cel:cel-bom", version = "0.5.3" }
checkstyle = { module = "com.puppycrawl.tools:checkstyle", version.ref = "checkstyle" }
commons-text = { module = "org.apache.commons:commons-text", version = "1.14.0" }
congocc = { module = "org.congocc:org.congocc.parser.generator", version = "2.0.0" }
docker-java-api = { module = "com.github.docker-java:docker-java-api", version = "3.5.3" }
errorprone-annotations = { module = "com.google.errorprone:error_prone_annotations", version.ref = "errorprone" }
errorprone-core = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone" }
errorprone-slf4j = { module = "jp.skypencil.errorprone.slf4j:errorprone-slf4j", version.ref = "errorproneSlf4j" }
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version = "3.0.2" }
gatling-charts-highcharts = { module = "io.gatling.highcharts:gatling-charts-highcharts", version.ref = "gatling" }
google-cloud-bigdataoss-gcs-connector = { module = "com.google.cloud.bigdataoss:gcs-connector", version.ref = "googleCloudBigdataoss" }
google-cloud-bigdataoss-gcsio = { module = "com.google.cloud.bigdataoss:gcsio", version.ref = "googleCloudBigdataoss" }
google-cloud-bigtable-bom = { module = "com.google.cloud:google-cloud-bigtable-bom", version = "2.64.0" }
google-cloud-secretmanager-bom = { module = "com.google.cloud:google-cloud-secretmanager-bom", version = "2.71.0" }
google-cloud-storage-bom = { module = "com.google.cloud:google-cloud-storage-bom", version = "2.55.0" }
google-cloud-libraries-bom = { module = "com.google.cloud:libraries-bom", version = "26.65.0" }
google-java-format = { module = "com.google.googlejavaformat:google-java-format", version.ref = "googleJavaFormat" }
guava = { module = "com.google.guava:guava", version = "33.4.8-jre" }
h2 = { module = "com.h2database:h2", version = "2.3.232" }
hadoop-aws = { module = "org.apache.hadoop:hadoop-aws", version.ref = "hadoop" }
hadoop-azure = { module = "org.apache.hadoop:hadoop-azure", version.ref = "hadoop" }
hadoop-client = { module = "org.apache.hadoop:hadoop-client", version.ref = "hadoop" }
hadoop-common = { module = "org.apache.hadoop:hadoop-common", version.ref = "hadoop" }
hibernate-validator-cdi = { module = "org.hibernate.validator:hibernate-validator-cdi", version = "9.0.1.Final" }
httpclient5 = { module = "org.apache.httpcomponents.client5:httpclient5", version = "5.5" }
iceberg-bom = { module = "org.apache.iceberg:iceberg-bom", version.ref = "iceberg" }
immutables-builder = { module = "org.immutables:builder", version.ref = "immutables" }
immutables-value-annotations = { module = "org.immutables:value-annotations", version.ref = "immutables" }
immutables-value-processor = { module = "org.immutables:value-processor", version.ref = "immutables" }
jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version = "2.19.2" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version = "3.0.0" }
jakarta-enterprise-cdi-api = { module = "jakarta.enterprise:jakarta.enterprise.cdi-api", version = "4.1.0" }
jakarta-inject-api = { module = "jakarta.inject:jakarta.inject-api", version = "2.0.1" }
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version = "6.1.0" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version = "3.1.1" }
jakarta-ws-rs-api = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version = "4.0.0" }
jandex = { module = "io.smallrye:jandex", version.ref = "jandex" }
javax-validation-api = { module = "javax.validation:validation-api", version = "2.0.1.Final"}
javax-ws-rs = { module = "javax.ws.rs:javax.ws.rs-api", version = "2.1.1" }
jaxb-impl = { module = "com.sun.xml.bind:jaxb-impl", version = "4.0.5" }
jersey-bom = { module = "org.glassfish.jersey:jersey-bom", version = "3.1.11" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version = "26.0.2" }
jetty-bom = { module = "org.eclipse.jetty:jetty-bom", version = "12.0.24" }
jline = { module = "org.jline:jline", version = "3.30.5" }
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-generator-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params" }
junit-platform-reporting = { module = "org.junit.platform:junit-platform-reporting" }
kafka-clients = { module = "org.apache.kafka:kafka-clients", version.ref = "kafka" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
lowkey-vault-client = { module = "com.github.nagyesta.lowkey-vault:lowkey-vault-client", version = "3.4.23" }
lowkey-vault-testcontainers = { module = "com.github.nagyesta.lowkey-vault:lowkey-vault-testcontainers", version = "3.4.23" }
keycloak-admin-client = { module = "org.keycloak:keycloak-admin-client", version.ref = "keycloak" }
mariadb-java-client = { module = "org.mariadb.jdbc:mariadb-java-client", version = "3.5.5" }
maven-resolver-supplier = { module = "org.apache.maven.resolver:maven-resolver-supplier", version.ref = "mavenResolver" }
micrometer-core = { module = "io.micrometer:micrometer-core", version = "1.15.2" }
microprofile-contextpropagation-api = { module = "org.eclipse.microprofile.context-propagation:microprofile-context-propagation-api", version = "1.3" }
microprofile-openapi = { module = "org.eclipse.microprofile.openapi:microprofile-openapi-api", version = "4.1" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mongodb-driver-sync = { module = "org.mongodb:mongodb-driver-sync", version = "5.5.1" }
nessie-runner-common = { module = "org.projectnessie.nessie-runner:nessie-runner-common", version = "0.32.2" }
nessie-ui = { module = "org.projectnessie.nessie.ui:nessie-ui", version = "0.64.1" }
netty-bom = { module = "io.netty:netty-bom", version.ref = "netty" }
okhttp3 = { module = "com.squareup.okhttp3:okhttp", version = "5.1.0" }
opentelemetry-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }
opentelemetry-bom-alpha = { module = "io.opentelemetry:opentelemetry-bom-alpha", version.ref = "opentelemetryAlpha" }
opentelemetry-instrumentation-bom-alpha = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha", version.ref = "opentelemetryAlpha" }
picocli = { module = "info.picocli:picocli-codegen", version.ref = "picocli" }
picocli-codegen = { module = "info.picocli:picocli-codegen", version.ref = "picocli" }
postgresql = { module = "org.postgresql:postgresql", version = "42.7.7" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
quarkus-amazon-services-bom = { module = "io.quarkus.platform:quarkus-amazon-services-bom", version.ref = "quarkusPlatform" }
quarkus-azure-services-bom = { module = "io.quarkiverse.azureservices:quarkus-azure-services-bom", version = "1.1.8" }
quarkus-bom = { module = "io.quarkus.platform:quarkus-bom", version.ref = "quarkusPlatform" }
quarkus-cassandra-bom = { module = "io.quarkus.platform:quarkus-cassandra-bom", version.ref = "quarkusPlatform" }
quarkus-google-cloud-services-bom = { module = "io.quarkus.platform:quarkus-google-cloud-services-bom", version.ref = "quarkusPlatform" }
quarkus-logging-sentry = { module = "io.quarkiverse.loggingsentry:quarkus-logging-sentry", version = "2.1.6" }
quarkus-vault = { module = "io.quarkiverse.vault:quarkus-vault", version.ref = "quarkusVault" }
quarkus-vault-deployment = { module = "io.quarkiverse.vault:quarkus-vault-deployment", version.ref = "quarkusVault" }
rest-assured = { module = "io.rest-assured:rest-assured", version = "5.5.5" }
rocksdb-jni = { module = "org.rocksdb:rocksdbjni", version = "10.2.1" }
scala-library-v212 = { module = "org.scala-lang:scala-library", version = { strictly = "[2.12, 2.13[", prefer = "2.12.20" }}
scala-library-v213 = { module = "org.scala-lang:scala-library", version = { strictly = "[2.13, 2.14[", prefer = "2.13.15"}}
slf4j-api = {  module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-jcl-over-slf4j = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
slf4j-log4j-over-slf4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
smallrye-mutiny = { module = "io.smallrye.reactive:mutiny", version = "2.9.4" }
smallrye-config-core = { module = "io.smallrye.config:smallrye-config-core", version = "3.13.4" }
snappy-java = { module = "org.xerial.snappy:snappy-java", version = "1.1.10.8" }
spark-sql-v33-v212 = { module = "org.apache.spark:spark-sql_2_12", version = { strictly = "[3.3, 3.4[", prefer = "3.3.4"}}
spark-sql-v33-v213 = { module = "org.apache.spark:spark-sql_2_13", version = { strictly = "[3.3, 3.4[", prefer = "3.3.4"}}
spark-sql-v34-v212 = { module = "org.apache.spark:spark-sql_2_12", version = { strictly = "[3.4, 3.5[", prefer = "3.4.3"}}
spark-sql-v34-v213 = { module = "org.apache.spark:spark-sql_2_13", version = { strictly = "[3.4, 3.5[", prefer = "3.4.3"}}
spark-sql-v35-v212 = { module = "org.apache.spark:spark-sql_2_12", version = { strictly = "[3.5, 3.6[", prefer = "3.5.3"}}
spark-sql-v35-v213 = { module = "org.apache.spark:spark-sql_2_13", version = { strictly = "[3.5, 3.6[", prefer = "3.5.3"}}
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version = "1.21.3" }
testcontainers-keycloak = { module = "com.github.dasniko:testcontainers-keycloak", version = "3.8.0" }
threeten-extra = { module = "org.threeten:threeten-extra", version = "1.8.0" }
trino-client = { module = "io.trino:trino-client", version = "476" }
undertow-core = { module = "io.undertow:undertow-core", version.ref = "undertow" }
undertow-servlet = { module = "io.undertow:undertow-servlet", version.ref = "undertow" }
vertx-core = { module = "io.vertx:vertx-core", version = "5.0.2" }
wiremock = { module = "org.wiremock:wiremock-standalone", version = "3.13.1" }
zstd-jni = { module = "com.github.luben:zstd-jni", version = "1.5.7-4" }

[plugins]
gatling = { id = "io.gatling.gradle", version = "3.14.3.5" }
jmh = { id = "me.champeau.jmh", version = "0.7.3" }
maven-central-publish = { id = "io.github.zenhelix.maven-central-publish", version = "0.8.0" }
nessie-run = { id = "org.projectnessie", version = "0.32.2" }
protobuf = { id = "com.google.protobuf", version = "0.9.5" }
quarkus = { id = "io.quarkus", version.ref = "quarkusPlugin" }
quarkus-extension = { id = "io.quarkus.extension", version.ref = "quarkusPlugin" }
smallrye-openapi = { id = "io.smallrye.openapi", version = "4.1.1" }
jetbrains-changelog = { id = "org.jetbrains.changelog",  version = "2.4.0"}
