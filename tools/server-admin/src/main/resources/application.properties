#
# Copyright (C) 2020 Dremio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Nessie settings
### default base branch name
nessie.server.default-branch=main
nessie.server.send-stacktrace-to-client=false


# To provide secrets via a keystore via Quarkus, the following configuration
# options need to be configured accordingly.
# For details see https://quarkus.io/guides/config-secrets#store-secrets-in-a-keystore
#smallrye.config.source.keystore."properties".path=properties
#smallrye.config.source.keystore."properties".password=arealpassword
#smallrye.config.source.keystore."properties".handler=aes-gcm-nopadding
#smallrye.config.source.keystore."key".path=key
#smallrye.config.source.keystore."key".password=anotherpassword

# Secret managers
nessie.secrets.type=NONE
# When using Google Cloud Secret Manager you may have to configure this to 'true'
quarkus.google.cloud.enable-metadata-server=false
# To enable a specific secrets manager consult the documentations for those, more
# information here: https://projectnessie.org/nessie-latest/configuration/#secrets-manager-settings


### which type of version store to use: IN_MEMORY, ROCKSDB, DYNAMODB, MONGODB, CASSANDRA, JDBC, BIGTABLE.
# Note: legacy configuration in `nessie.version.store.advanced` is _not_ applied to the version
# store types above. Use the config options starting with `nessie.version.store.persist`.
nessie.version.store.type=IN_MEMORY

# Object cache size as a value relative to the JVM's max heap size. The `cache-capacity-fraction-adjust-mb`
# value will be "kept free" when calculating the effective cache size. Set `cache-capacity-fraction-of-heap`
# to 0 to use a fixed size.
# Entirely disabling the cache is not recommended and will negatively affect performance.
#nessie.version.store.persist.cache-capacity-fraction-of-heap=0.7
#nessie.version.store.persist.cache-capacity-fraction-adjust-mb=256
# When having very small heaps, use the `cache-capacity-fraction-min-size-mb` value. Set to `0` to disable
# the min cache capacity.
#nessie.version.store.persist.cache-capacity-fraction-min-size-mb=64
# Fixed size of Nessie's object cache in MB.
# Settings this value to 0 disables the fixed size object cache.
# Entirely disabling the cache is not recommended and will negatively affect performance.
#nessie.version.store.persist.cache-capacity-mb=0

## Transactional database configuration

# Note: Nessie Quarkus Server comes with built-in support for Postgres and MariaDB, or any database
# compatible with these.
# Select the datasource to use with the `nessie.version.store.persist.jdbc.datasource` property;
# The possible built-in values are: "default" (deprecated), "postgresql", "mariadb" and "mysql".
#nessie.version.store.persist.jdbc.datasource=default

# Default datasource configuration (deprecated; use quarkus.datasource.postgresql.* instead):
quarkus.datasource.db-kind=postgresql
quarkus.datasource.active=false
quarkus.datasource.devservices.enabled=false
#quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/my_database
#quarkus.datasource.username=<your username>
#quarkus.datasource.password=<your password>

# Postgres datasource configuration:
quarkus.datasource.postgresql.db-kind=postgresql
quarkus.datasource.postgresql.active=false
quarkus.datasource.postgresql.devservices.enabled=false
#quarkus.datasource.postgresql.jdbc.url=jdbc:postgresql://localhost:5432/my_database
#quarkus.datasource.postgresql.username=<your username>
#quarkus.datasource.postgresql.password=<your password>

# MariaDB datasource configuration:
quarkus.datasource.mariadb.db-kind=mariadb
quarkus.datasource.mariadb.active=false
quarkus.datasource.mariadb.devservices.enabled=false
#quarkus.datasource.mariadb.username=<your username>
#quarkus.datasource.mariadb.password=<your password>
#quarkus.datasource.mariadb.jdbc.url=jdbc:mariadb://localhost:3306/my_database
# Do not remove or modify the following, as these optimization flags are incompatible with Nessie;
# see https://mariadb.com/docs/server/connect/programming-languages/java/batch.
quarkus.datasource.mariadb.jdbc.additional-jdbc-properties.useBulkStmts=false
quarkus.datasource.mariadb.jdbc.additional-jdbc-properties.useBulkStmtsForInserts=false

# MySQL datasource configuration:
quarkus.datasource.mysql.db-kind=mariadb
quarkus.datasource.mysql.active=false
quarkus.datasource.mysql.devservices.enabled=false
#quarkus.datasource.mysql.username=<your username>
#quarkus.datasource.mysql.password=<your password>
#quarkus.datasource.mysql.jdbc.url=jdbc:mysql://localhost:3306/my_database

## RocksDB version store specific configuration
#nessie.version.store.persist.rocks.database-path=nessie-rocksdb

## MongoDB version store specific configuration
quarkus.mongodb.database=nessie
quarkus.mongodb.metrics.enabled=true
#quarkus.mongodb.connection-string=mongodb://localhost:27017
# fixed at buildtime
quarkus.mongodb.devservices.enabled=false

## Dynamo
quarkus.dynamodb.aws.region=us-west-2
quarkus.dynamodb.aws.credentials.type=DEFAULT
# quarkus.dynamodb.endpoint-override=http://localhost:8000
quarkus.dynamodb.sync-client.type=apache
quarkus.dynamodb.devservices.enabled=false

## Cassandra
quarkus.cassandra.keyspace=nessie
#quarkus.cassandra.contact-points={cassandra_ip}:9042
#quarkus.cassandra.local-datacenter={dc_name}
#quarkus.cassandra.auth.username=
#quarkus.cassandra.auth.password=
quarkus.cassandra.health.enabled=false
## Nessie specific Apache Cassandra properties
#nessie.version.store.cassandra.ddl-timeout=PT5S
#nessie.version.store.cassandra.dml-timeout=PT3S

# BigTable
#
# To use the Bigtable emulator, configure its host and port using these options.
# WARNING!! Using the emulator effectively disables authentication against BigTable (emulator).
# nessie.version.store.persist.bigtable.emulator-host=
# nessie.version.store.persist.bigtable.emulator-port=
#
# Required options, see https://quarkiverse.github.io/quarkiverse-docs/quarkus-google-cloud-services/main/
# quarkus.google.cloud.project-id=
# nessie.version.store.persist.bigtable.instance-id=
# nessie.version.store.persist.bigtable.app-profile-id=
#
# Prefix for tables in BigTable.
# nessie.version.store.persist.bigtable.table-prefix=
#
# See https://quarkiverse.github.io/quarkiverse-docs/quarkus-google-cloud-services/main/#authenticating for
# authentication options.

# Quarkus settings
## Visit here for all configs: https://quarkus.io/guides/all-config
## some parameters are only configured at build time. These have been marked as such https://quarkus.io/guides/config#overriding-properties-at-runtime
quarkus.log.level=INFO
quarkus.log.console.level=WARN
# Somehow the trace-relevant IDs do not appear on the console, but they do in a log file... :(
#quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%X{traceId},%X{spanId},%X{sampled}] [%c{3.}] (%t) %s%e%n
quarkus.log.file.level=INFO
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %h %N[%i] %-5p [%X{traceId},%X{spanId},%X{sampled}] [%c{3.}] (%t) %s%e%n
quarkus.log.category."io.netty".level=WARN

# Do not print the banner, because that prints _after_ the CLI output :(
quarkus.banner.enabled=false
quarkus.application.name=Nessie Server Admin Tool

quarkus.micrometer.enabled=false

# Quarkus build settings - only change if building/deploying locally

## Quarkus required setting for third party indexing
# fixed at buildtime
quarkus.index-dependency.guava.group-id=com.google.guava
quarkus.index-dependency.guava.artifact-id=guava
quarkus.index-dependency.protobuf.group-id=com.google.protobuf
quarkus.index-dependency.protobuf.artifact-id=protobuf-java

# line wrapping doesn't work here :shrug:
quarkus.arc.ignored-split-packages=\
  org.projectnessie.quarkus.config,org.projectnessie.quarkus.providers,org.projectnessie.quarkus.providers.versionstore,org.projectnessie.server.catalog

quarkus.http.test-port=0

# Disable a "lot of things" that are not needed for integration testing. Disabled in an effort to get hold
# of the class-loader OOM leak described in https://github.com/projectnessie/nessie/issues/8571
# Many of these settings are probably unnecessary, but otoh don't hurt.
quarkus.devservices.enabled=false
%test.quarkus.micrometer.enabled=false
%test.quarkus.micrometer.registry-enabled-default=false
%test.quarkus.mongodb.metrics.enabled=false
%test.quarkus.otel.enabled=false
%test.quarkus.otel.sdk.disabled=true
%test.quarkus.otel.exporter.otlp.enabled=false
%test.quarkus.otel.metrics.enabled=false
%test.quarkus.otel.metrics.exporter=none
%test.quarkus.otel.traces.eusp.enabled=false
%test.quarkus.otel.traces.exporter=none
%test.nessie.version.store.persist.bigtable.enable-telemetry=false
